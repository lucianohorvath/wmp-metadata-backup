{\rtf1\ansi\ansicpg1252\deff0\deflang2067\deflangfe1041{\fonttbl{\f0\fswiss\fprq2\fcharset0 Verdana;}}
{\*\generator Msftedit 5.41.15.1515;}\viewkind4\uc1\pard\keepn\nowidctlpar\sb100\sa240\qc\lang2057\b\f0\fs24 Metadata Backup\par
\pard\keepn\nowidctlpar\sb100\sa100\fs20 How Windows Media Player stores your data\par
\b0 If you're not aware, Windows Media Player stores data about your music files in two different places. First, it stores data in ID3 tags within the files themselves. You can get a few other tools that Dale Preston has developed for managing ID3 tags, such as ID3 Tag Backup, ID3 Embed Pictures, and ID3 Raw Tag Viewer.\par
The other place where Windows Media Player stores information about your music files is in the Windows Media Player library database. There is a copy of the database for each user that logs onto your PC and runs Windows Media Player. This database does not include the actual media but only metadata about the media - data like album name, artist name, when it was added to your library, etc. \line\b\par
Rebuilding your Windows Media Player library database\par
\pard\nowidctlpar\sb100\sa100\b0 The database is, by default, stored in a hidden folder buried deeply within your user profile. For instance, on my Windows 2003 Server PC, with Windows Media Player 10, my database is stored at "C:\\Documents and Settings\\Dale\\Local Settings\\Application Data\\Microsoft\\Media Player\\CurrentDatabase_219.wmdb". On my Vista PC, with Windows Media Player 11, the database is stored at "C:\\Users\\Dale\\AppData\\Local\\Microsoft\\Media Player\\CurrentDatabase_360.wmdb". Many of those folders are hidden or system folders and to see them, you have to enable the listing of both hidden and system files and folders in the Folder Options settings in Windows Explorer. \par
Remember these paths because they can be important for fixing database problems. To fix a corrupted database, you'll want to browse to the "Microsoft" folder level of that folder structure and rename the Media Player folder to something like "Media Player old". Renaming the folder causes the player to build a new, empty, database faster than just deleting or renaming the database files. This is because the database data is cached within Windows Media Player and renaming the folder, apparently, causes the cache to be thrown out and the new database built. Just remember to do this with Windows Media Player not running!\par
More information about rebuilding the Windows Media Player library can be found at http://zachd.com/pss/pss.html#medialibrary.\line\par
\pard\keepn\nowidctlpar\sb100\sa100\b Backing up your Windows Media Player library database\par
\pard\nowidctlpar\sb100\sa100\b0 One way to backup the metadata in your library is to simply make a backup copy of the database file or the entire folder from time to time. This is a file system based backup. To restore the backup, simply reboot your PC and before opening Windows Media Player, replace the file or folder with your backup. Piece of cake. As long as the database backup you're restoring is of the same version of Windows Media Player and as long as that database is not corrupt - after all, the reason for needing a backup in the first place is because the Windows Media Player database is just not very reliable at all.\line\par
\pard\keepn\nowidctlpar\sb100\sa100\b What's wrong with the Windows Media Player library database?\par
\pard\nowidctlpar\sb100\sa100\b0 Let me editorialize for a minute here. \par
Microsoft produces a fantastic and powerful database system called SQL Server 2005. This is an enterprise capable database system that can cost as much as 25,000 dollars a copy up to hundreds of thousands of dollars a copy and can be installed on servers with anywhere from 1 to 64 processors. Microsoft, very much to my amazement, has produced a free version of SQL Server 2005 for desktop use that, for most desktop users, you would never notice the few limitations (such as only one processor - after all, do you have 64 processors on your PC?). \par
SQL Server 2005 Express Edition supports fully logged database transactions, fantastic backup support, and famous reliability and performance. The database format for Windows Media Player has none of these features - including the reliability or performance. Microsoft recommends using SQL Server 2005 Express Edition for all desktop database needs just as they had, for many years before, suggested SQL Server 2005 Express Edition's predecessor, MSDE.\par
For some reason, the Windows Media Player product team does not follow Microsoft's own recommendations and they continue to use a proprietary database system that can only be accessed through their provided interfaces and that is notoriously slow and unreliable. In fact, here's a quote from Zach Robinson, who spent many years on the Windows Media Player product team: \par
"The team pays tight attention to this kind of thing. It's a fascinating problem - dead libraries are typically non-recoverable and since they're reflective in nature (not containing any really (sic) intrinsic value), there's not much call to get them rolling again."\line\par
\pard\keepn\nowidctlpar\sb100\sa100\b Why use Metadata Backup?\par
\pard\nowidctlpar\sb100\sa100\b0 Apparently, the Windows Media Player product team just doesn't think your data or the hundreds of hours you may have spent managing that data has any value and that your time and efforts can be discarded without regard. That is one of the two primary reasons why I wrote Metadata Backup for Windows Media Player. Obviously, your database and mine have a lot of intrinsic value. We have spent hours tweaking them and getting them just right and if they get corrupted - which definitely happens - we absolutely want to get them rolling again. \par
The second primary reason why I wrote Metadata Backup is that it can also support migrating data from one PC to another. If you just got your new Vista PC you can use Metadata Backup to backup the metadata from the library, including your stars ratings, custom columns in the library, and other data that is not normally stored in the ID3 tags and is, therefore, not reflective of the media - and thus represent the bulk of the work in managing many libraries. Then, after copying your media over to the new PC, use Metadata Backup to restore those custom values that are not copied with the file.\line\par
\pard\keepn\nowidctlpar\sb100\sa100\b Backing up your metadata with Metadata Backup\par
\pard\nowidctlpar\sb100\sa100\b0 Metadata Backup uses a different approach than simply backing up the database file. And this is necessary for moving libraries to a new PC or drive, for instance. Metadata Backup starts with the music files on your drive and gets just the data for those files. It does not retrieve data for images, videos, or deleted tracks that are stored in the database file as well. For using with your music library, this gives a much cleaner backup and restoration.\par
So, let's get on to how to use Metadata Backup to backup your library database.\par
\pard\nowidctlpar\fi-360\li360\sb100\sa100\tx360\tx710 1.\tab Start by selecting the starting point in your music folders. If you are moving just a single artist, you may want to browse to the folder for that artist, such as (in my library): "D:\\My Music\\Alabama" or, to backup your entire library, again using my own as an example, I would browse to "D:\\My Music".\par
2.\tab Next, unless you're just backing up one album and you browsed to the album contents in step 1, you will want to check the box to include subfolders. That will cause Metadata Backup to get the data on all files in the selected folder and every folder underneath - such as all the different album folders.\par
3.\tab Now browse to where you want to store the XML file containing the backed up data and provide the file name you wish to use or accept the default.\par
4.\tab Click the Backup button. Depending on how large your library is, this could take a while. With my 10 000+ file library, it takes about 30 minutes on an old PC and just a few minutes on my dual-core Vista PC.\par
\pard\nowidctlpar\sb100\sa100 That's it. Your database is backed up. Now, you can protect or recover a lot more data when Windows Media Player corrupts your database library.\line\par
\pard\keepn\nowidctlpar\sb100\sa100\b Restoring your backed up metadata using Metadata Backup\par
\pard\nowidctlpar\sb100\sa100\b0 So, how do I restore? \par
A key fact with how Metadata Backup works for restoring is that it is dependent on the file structure that existed when the database was backed up. Don't change any file names or any folder names or hierarchy for artists or albums. Metadata Backup uses the SourceURL attribute for locating the files to restore metadata for. If you want to make any of those other changes, make them after restoring your database or if you don't need to restore the database, make a new backup after making those changes. \par
Ok, on with the restoration steps.\par
\pard\nowidctlpar\fi-360\li360\sb100\sa100\tx360\tx710 1.\tab Browse for the starting folder of your library. Typically, this will be the folder that contains all the artist folders or that contains the same artist or album folder that you backed up and are now restoring. The Include subfolders checkbox has no effect on restorations. The restoration restores everything in the XML file.\par
2.\tab Browse to the database backup file that you previously created.\par
3.\tab Click Restore.\line\pard\nowidctlpar\fi-360\li360\sb100\sa100\par
\pard\keepn\nowidctlpar\sb100\sa100\b Using Metadata Backup to restore your metadata when moving your library to a new drive or PC\par
\pard\nowidctlpar\sb100\sa100\b0 And the last major use for Metadata Backup is to move your library to a new drive or PC. \par
Let's say that, in my case, I had originally backed up the metadata for my entire music library at "D:\\My Music" and now I want to move my library to a new computer. The thing is, on the new PC, I want to organize my drives a little differently. So I want to put the library at "E:\\Shared Data\\Shared Music". That's just fine. Metadata Backup will handle that seamlessly just as long as I don't change the structure underneath those folders. For instance, when I copy the music over, I still have, under Shared Music now, just as it was under My Music before, folders named ".38 Special", "10cc", "Abba", "Aerosmith", "Alabama", and so on.\par
Then, before using Metadata Backup, I would add all the new music to the Windows Media Player media library by pressing F3 in Windows Media Player (in Windows Media Player 12, click Organize, and select Manage libraries \endash  Music). You have to do this because Metadata Backup only restores metadata for files that exist on the target file system, and are already added to the library. It starts by reading the data in the backup for a track, then verifies that the track exists in the media library, and then restores the metadata. So, with the files all added to the Windows Media Player library, we can restore the metadata.\par
When I browse for the music source folder to restore on the new PC, I browse to "E:\\Shared Data\\Shared Music". Next I browse to where I copied the metadata backup file on the new PC, and finally click Restore.\par
Metadata backup will restore all of the metadata that is not protected as read-only in the database. For a complete list of the attributes used for music files, including whether or not they are read-only and, therefore, can be backed up but not restored, go to http://msdn2.microsoft.com/en-us/library/aa385267.aspx.\par
\i Dale Preston\par
\pard\nowidctlpar\i0\par
}
 